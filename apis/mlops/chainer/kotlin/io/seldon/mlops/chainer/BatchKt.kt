/*
Copyright 2022 Seldon Technologies Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: chainer.proto

package io.seldon.mlops.chainer;

@kotlin.jvm.JvmName("-initializebatch")
inline fun batch(block: io.seldon.mlops.chainer.BatchKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.chainer.ChainerOuterClass.Batch =
  io.seldon.mlops.chainer.BatchKt.Dsl._create(io.seldon.mlops.chainer.ChainerOuterClass.Batch.newBuilder()).apply { block() }._build()
object BatchKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.seldon.mlops.chainer.ChainerOuterClass.Batch.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.seldon.mlops.chainer.ChainerOuterClass.Batch.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.seldon.mlops.chainer.ChainerOuterClass.Batch = _builder.build()

    /**
     * <code>optional uint32 size = 1;</code>
     */
    var size: kotlin.Int
      @JvmName("getSize")
      get() = _builder.getSize()
      @JvmName("setSize")
      set(value) {
        _builder.setSize(value)
      }
    /**
     * <code>optional uint32 size = 1;</code>
     */
    fun clearSize() {
      _builder.clearSize()
    }
    /**
     * <code>optional uint32 size = 1;</code>
     * @return Whether the size field is set.
     */
    fun hasSize(): kotlin.Boolean {
      return _builder.hasSize()
    }

    /**
     * <code>optional uint32 windowMs = 2;</code>
     */
    var windowMs: kotlin.Int
      @JvmName("getWindowMs")
      get() = _builder.getWindowMs()
      @JvmName("setWindowMs")
      set(value) {
        _builder.setWindowMs(value)
      }
    /**
     * <code>optional uint32 windowMs = 2;</code>
     */
    fun clearWindowMs() {
      _builder.clearWindowMs()
    }
    /**
     * <code>optional uint32 windowMs = 2;</code>
     * @return Whether the windowMs field is set.
     */
    fun hasWindowMs(): kotlin.Boolean {
      return _builder.hasWindowMs()
    }

    /**
     * <code>bool rolling = 3;</code>
     */
    var rolling: kotlin.Boolean
      @JvmName("getRolling")
      get() = _builder.getRolling()
      @JvmName("setRolling")
      set(value) {
        _builder.setRolling(value)
      }
    /**
     * <code>bool rolling = 3;</code>
     */
    fun clearRolling() {
      _builder.clearRolling()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.seldon.mlops.chainer.ChainerOuterClass.Batch.copy(block: io.seldon.mlops.chainer.BatchKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.chainer.ChainerOuterClass.Batch =
  io.seldon.mlops.chainer.BatchKt.Dsl._create(this.toBuilder()).apply { block() }._build()

