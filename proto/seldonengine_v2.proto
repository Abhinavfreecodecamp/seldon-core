// [START declaration]
syntax = "proto2";
package seldon.protos;
// [END declaration]

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "v1.proto";

// [START java_declaration]
option java_package = "io.seldon.protos";
option java_outer_classname = "DeploymentProtos";
// [END java_declaration]

// [START messages]


message PredictionGraph {

  enum PredictiveUnitType {
    UNKNOWN_TYPE = 0;
    ROUTER = 1;
    COMBINER = 2;
    MODEL = 3;
    TRANSFORMER = 4;
  }

  enum PredictiveUnitSubType {
    UNKNOWN_SUBTYPE = 0;
    MICROSERVICE = 1;
    SIMPLE_MODEL = 2;
    SIMPLE_ROUTER = 3;
    RANDOM_ABTEST = 4;
    AVERAGE_COMBINER = 5;
  }

    enum EndpointType {
        REST = 0;
        GRPC = 1;
    }

  required string name = 1;//must match container name of component if subtype microservice
  repeated PredictionGraph children = 2;
  required PredictiveUnitType type = 3;
  required PredictiveUnitSubType subtype = 4;
  optional EndpointType protocol = 5;
}

message EndpointDef {

  enum EndpointType {
    REST = 0;
    GRPC = 1;
  }

  optional string service_host = 1;
  optional int32 service_port = 2;
  optional EndpointType type = 3;
}


message PredictorDef {
  required string name = 1;
  required PredictionGraph graphSpec = 2;
  optional k8s.io.api.core.v1.PodTemplateSpec componentSpec = 3;
  optional EndpointDef endpoint = 4;
  optional int32 replicas = 5;
}

message DeploymentDef {
  optional string name = 1;
  repeated PredictorDef predictors = 2;
  optional string oauth_key = 3;
  optional string oauth_secret = 4;
  map<string,string> annotations = 5;
}


message PredictorStatus {
  required string name = 1;
  required string status = 2; 
  optional string description = 3; 
}

message DeploymentStatus {
  required string state = 1; 
  optional string description = 2; 
  repeated PredictorStatus predictorStatus = 3;
}

message MLDeployment {
  required string apiVersion = 1;
  required string kind = 2;
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 3;
  required DeploymentDef spec = 4;
  optional DeploymentStatus status = 5;
}


// [END messages]

