version: "3.9"

volumes:
  models-mlserver:
  models-triton:

services:

  agent-mlserver:
    command:
      - "/bin/agent"
      - "--log-level"
      - "debug"
      - "--config-path"
      - "/mnt/config"
      - "--rclone-host"
      - "rclone-mlserver"
      - "--inference-host"
      - "mlserver"
      - "--agent-host"
      - "agent-mlserver"
      - "--server-name"
      - "mlserver"
    environment:
      - SELDON_OVERCOMMIT_PERCENTAGE=${AGENT_OVERCOMMIT_PERCENTAGE}
      - SELDON_REVERSE_PROXY_HTTP_PORT=${SELDON_MLSERVER_REVERSE_PROXY_HTTP_PORT}
      - SELDON_REVERSE_PROXY_GRPC_PORT=${SELDON_MLSERVER_REVERSE_PROXY_GRPC_PORT}
      - SELDON_SERVER_HTTP_PORT=${SERVER_MLSERVER_HTTP_PORT}
      - SELDON_SERVER_GRPC_PORT=${SERVER_MLSERVER_GRPC_PORT}
      - SELDON_DEBUG_GRPC_PORT=${AGENT_MLSERVER_DEBUG_PORT}
      - SELDON_SCHEDULER_HOST=scheduler
      - SELDON_SCHEDULER_PORT=${SCHEDULER_AGENT_PORT}
      - MEMORY_REQUEST=${AGENT_MEMORY_REQUEST}
      - SELDON_SERVER_TYPE=mlserver
      - SELDON_SERVER_CAPABILITIES=mlserver,alibi-detect,lightgbm,mlflow,python,sklearn,spark-mlib,xgboost
    ports:
      - "${AGENT_MLSERVER_HTTP_PORT}:${AGENT_MLSERVER_HTTP_PORT}"
      - "${AGENT_MLSERVER_GRPC_PORT}:${AGENT_MLSERVER_GRPC_PORT}"
      - "${SELDON_MLSERVER_REVERSE_PROXY_HTTP_PORT}:${SELDON_MLSERVER_REVERSE_PROXY_HTTP_PORT}"
      - "${SELDON_MLSERVER_REVERSE_PROXY_GRPC_PORT}:${SELDON_MLSERVER_REVERSE_PROXY_GRPC_PORT}"
    volumes:
      - type: bind
        source: ./config
        target: /mnt/config
      - type: volume
        source: models-mlserver
        target: /mnt/agent
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}
        
  agent-triton:
    command:
      - "/bin/agent"
      - "--log-level"
      - "debug"
      - "--config-path"
      - "/mnt/config"
      - "--rclone-host"
      - "rclone-triton"
      - "--rclone-port"
      - ${RCLONE_TRITON_HTTP_PORT}
      - "--inference-host"
      - "triton"
      - "--agent-host"
      - "agent-triton"
      - "--server-name"
      - "triton"
    ports:
      - "${AGENT_TRITON_HTTP_PORT}:${AGENT_TRITON_HTTP_PORT}"
      - "${AGENT_TRITON_GRPC_PORT}:${AGENT_TRITON_GRPC_PORT}"
      - "${SELDON_TRITON_REVERSE_PROXY_HTTP_PORT}:${SELDON_TRITON_REVERSE_PROXY_HTTP_PORT}"
      - "${SELDON_TRITON_REVERSE_PROXY_GRPC_PORT}:${SELDON_TRITON_REVERSE_PROXY_GRPC_PORT}"
    volumes:
      - type: bind
        source: ./config
        target: /mnt/config
      - type: volume
        source: models-triton
        target: /mnt/agent
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}

  rclone-mlserver:
    ports:
      - "${RCLONE_MLSERVER_HTTP_PORT}:${RCLONE_MLSERVER_HTTP_PORT}"
    volumes:
      - type: volume
        source: models-mlserver
        target: /mnt/agent
        
  rclone-triton:
    ports:
      - "${RCLONE_TRITON_HTTP_PORT}:${RCLONE_TRITON_HTTP_PORT}"
    volumes:
      - type: volume
        source: models-triton
        target: /mnt/agent

  mlserver:
    ports:
      - "${SERVER_MLSERVER_HTTP_PORT}:${SERVER_MLSERVER_HTTP_PORT}"
      - "${SERVER_MLSERVER_GRPC_PORT}:${SERVER_MLSERVER_GRPC_PORT}"
    volumes:
      - type: volume
        source: models-mlserver
        target: /mnt/agent
        
  triton:
    ports:
      - "${SERVER_TRITON_HTTP_PORT}:${SERVER_TRITON_HTTP_PORT}"
      - "${SERVER_TRITON_GRPC_PORT}:${SERVER_TRITON_GRPC_PORT}"
    volumes:
      - type: volume
        source: models-triton
        target: /mnt/agent
    depends_on:
      - agent-triton

  scheduler:
    command:
      - "/bin/scheduler"
      - "--log-level"
      - "debug"
      - "--pipeline-gateway-host"
      - "pipelinegateway"
    ports:
      - "${SCHEDULER_XDS_PORT}:${SCHEDULER_XDS_PORT}"
      - "${SCHEDULER_SERVER_PORT}:${SCHEDULER_SERVER_PORT}"
      - "${SCHEDULER_AGENT_PORT}:${SCHEDULER_AGENT_PORT}"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}

        
  modelgateway:
    volumes:
      - type: bind
        source: ./config
        target: /mnt/config
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}

  pipelinegateway:
    volumes:
      - type: bind
        source: ./config
        target: /mnt/config
    ports:
      - "${PIPELINEGATEWAY_HTTP_PORT}:${PIPELINEGATEWAY_HTTP_PORT}"
      - "${PIPELINEGATEWAY_GRPC_PORT}:${PIPELINEGATEWAY_GRPC_PORT}"      
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}

  kafka:
    command: [
      "sh", "-c",
      "./bin/kafka-storage.sh format -t $$(./bin/kafka-storage.sh random-uuid) -c ./config/kraft/server.properties && ./bin/kafka-server-start.sh ./config/kraft/server.properties --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override listeners=$${KAFKA_LISTENERS}"
    ]    
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092

  dataflow:
    environment:
      - SELDON_UPSTREAM_HOST=scheduler
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://${OTEL_EXPORTER_OTLP_ENDPOINT}
      
  envoy:
    ports:
      - "${ENVOY_DATA_PORT}:${ENVOY_DATA_PORT}"
      - "${ENVOY_CONTROL_PORT}:${ENVOY_CONTROL_PORT}"
    command:
      - "/usr/local/bin/envoy"
      - "-c"
      - "/etc/envoy-compose.yaml"

