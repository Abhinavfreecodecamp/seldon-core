version: "3.9"

volumes:
  models:

services:

  agent:
    ports:
      - "${AGENT_HTTP_PORT}:${AGENT_HTTP_PORT}"
      - "${AGENT_GRPC_PORT}:${AGENT_GRPC_PORT}"
      - "${SELDON_REVERSE_PROXY_HTTP_PORT}:${SELDON_REVERSE_PROXY_HTTP_PORT}"
      - "${SELDON_REVERSE_PROXY_GRPC_PORT}:${SELDON_REVERSE_PROXY_GRPC_PORT}"
    volumes:
      - type: bind
        source: ./config
        target: /mnt/config
      - type: volume
        source: models
        target: /mnt/agent

  dataflow:
    environment:
      - SELDON_UPSTREAM_HOST=scheduler

  envoy:
    ports:
      - "${ENVOY_DATA_PORT}:${ENVOY_DATA_PORT}"
      - "${ENVOY_CONTROL_PORT}:${ENVOY_CONTROL_PORT}"
    command:
      - "/usr/local/bin/envoy"
      - "-c"
      - "/etc/envoy-compose.yaml"

  rclone:
    ports:
      - "${RCLONE_HTTP_PORT}:${RCLONE_HTTP_PORT}"
    volumes:
      - type: volume
        source: models
        target: /mnt/agent

  scheduler:
    command:
      - "/bin/scheduler"
      - "--log-level"
      - "debug"
      - "--pipeline-gateway-host"
      - "pipelinegateway"
    ports:
      - "${SCHEDULER_XDS_PORT}:${SCHEDULER_XDS_PORT}"
      - "${SCHEDULER_SERVER_PORT}:${SCHEDULER_SERVER_PORT}"
      - "${SCHEDULER_AGENT_PORT}:${SCHEDULER_AGENT_PORT}"

  server:
    ports:
      - "${SERVER_HTTP_PORT}:${SERVER_HTTP_PORT}"
      - "${SERVER_GRPC_PORT}:${SERVER_GRPC_PORT}"
    volumes:
      - type: volume
        source: models
        target: /mnt/agent

  modelgateway:
    volumes:
      - type: bind
        source: ./config
        target: /mnt/config

  pipelinegateway:
    volumes:
      - type: bind
        source: ./config
        target: /mnt/config
    ports:
      - "${PIPELINEGATEWAY_HTTP_PORT}:${PIPELINEGATEWAY_HTTP_PORT}"
      - "${PIPELINEGATEWAY_GRPC_PORT}:${PIPELINEGATEWAY_GRPC_PORT}"      

  kafka:
    command: [
      "sh", "-c",
      "./bin/kafka-storage.sh format -t $$(./bin/kafka-storage.sh random-uuid) -c ./config/kraft/server.properties && ./bin/kafka-server-start.sh ./config/kraft/server.properties --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override listeners=$${KAFKA_LISTENERS}"
    ]    
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
