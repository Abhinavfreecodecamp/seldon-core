apiVersion: apps/v1
kind: Deployment
metadata:
  name: seldon-modelgateway
spec:
  template:
    spec:
      containers:        
      - env:
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: '{{ .Values.opentelemetry.endpoint }}'
          - name: MODELGATEWAY_NUM_WORKERS
            value: '{{ .Values.modelgateway.workers }}'
          - name: KAFKA_DEFAULT_REPLICATION_FACTOR
            value: '{{ .Values.kafka.topics.replicationFactor }}'        
          - name: KAFKA_DEFAULT_PARTITIONS_DEFAULT
            value: '{{ .Values.kafka.topics.numPartitions }}'        
          - name: CONTROL_PLANE_SECURITY_PROTOCOL
            value: '{{ .Values.security.controlplane.protocol }}'            
          - name: CONTROL_PLANE_TLS_SECRET_NAME
            value: '{{ .Values.security.controlplane.ssl.client.secret }}'
          - name: CONTROL_PLANE_TLS_KEY_LOCATION
            value: '{{ .Values.security.controlplane.ssl.key }}'
          - name: CONTROL_PLANE_TLS_CRT_LOCATION
            value: '{{ .Values.security.controlplane.ssl.crt }}'
          - name: CONTROL_PLANE_TLS_CA_LOCATION
            value: '{{ .Values.security.controlplane.ssl.ca }}'
          - name: KAFKA_SECURITY_PROTOCOL
            value: '{{ .Values.security.kafka.protocol }}'            
          - name: KAFKA_CLIENT_TLS_SECRET_NAME
            value: '{{ .Values.security.kafka.ssl.client.secret }}'
          - name: KAFKA_CLIENT_TLS_KEY_LOCATION
            value: '{{ .Values.security.kafka.ssl.client.key }}'
          - name: KAFKA_CLIENT_TLS_CRT_LOCATION
            value: '{{ .Values.security.kafka.ssl.client.crt }}'
          - name: KAFKA_CLIENT_TLS_CA_LOCATION
            value: '{{ .Values.security.kafka.ssl.client.ca }}'
          - name: KAFKA_BROKER_TLS_SECRET_NAME
            value: '{{ .Values.security.kafka.ssl.broker.secret }}'
          - name: KAFKA_BROKER_TLS_CA_LOCATION
            value: '{{ .Values.security.kafka.ssl.broker.ca }}'
        resources:
          requests:
            cpu: '{{ .Values.modelgateway.resources.requests.cpu }}'
            memory: '{{ .Values.modelgateway.resources.requests.memory }}'
        image: '{{ .Values.modelgateway.image.registry }}/{{ .Values.modelgateway.image.repository }}:{{ .Values.modelgateway.image.tag }}'
        imagePullPolicy: '{{ .Values.modelgateway.image.pullPolicy }}'
        name: modelgateway
